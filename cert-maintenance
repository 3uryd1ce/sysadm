#!/usr/bin/env perl
# Copyright (c) 2022 Ashlen <eurydice@riseup.net>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use v5.32;
use strict;
use warnings;
use autodie qw(:all);

# Included modules.
use File::Basename qw(fileparse);
use Getopt::Std;

# External modules.
use IPC::System::Simple qw(capturex);

my $program_name = fileparse $0;

sub usage {
	die <<EOF;
$program_name [-hNO] [domain_name ...]
EOF
}

our ( $opt_h, $opt_O, $opt_N, );

getopts('hNO');

usage if $opt_h;
usage if !@ARGV;

$> == 0 or die "$program_name must be run as root.\n";

my $acme_client_conf = '/etc/acme-client.conf';
-e -f $acme_client_conf
	or die "$acme_client_conf doesn't exist or isn't a file.\n";

for my $domain_name (@ARGV) {
	my $crt_file = "/etc/ssl/$domain_name.crt";
	my $ocsp_file = "/etc/ssl/$domain_name.ocsp";

	# capturex is used to easily suppress output (much easier than an equivalent
	# solution with IPC::Open2 or IPC::Open3).
	my $dummy = capturex [ 0, 2 ], qw(acme-client --), $domain_name;
	undef $dummy;

	if ( defined $opt_O ) {
		my @ocspcheck = $opt_N ? qw(ocspcheck -N) : 'ocspcheck';
		my $dummy_two = capturex @ocspcheck, '-o', $ocsp_file, qw(--),
			$crt_file;

		undef $dummy_two;
	}
}
