#!/usr/bin/env sh
# shellcheck disable=SC1090
set -e
# Copyright (c) 2020-2021 Ashlen <eurydice@riseup.net>

# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.

# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# check that the library file is readable. if it is, source it so its
# functions are available. if not, exit due to potentially unpredictable
# behavior.
readonly library='/etc/sysadm/common.sh'

if [ -r "${library}" ]; then
  . "${library}"

else
  cat >&2 <<EOF
${library} doesn't exist or isn't readable.
${0##*/} may not function correctly without it; exiting for safety.
EOF

  exit 1

fi

usage() {
  cat >&2 <<EOF
${0##*/} requires at least ${args_needed} argument(s).

usage:
${0##*/} [backup target] [flags] > filename

with compression:
${0##*/} [backup target] [flags] | gzip -c > filename

flags can be:
-w: write to current directory in '[backup target]-YYYY-MM-DD.dump' format
EOF

  exit 1
}

# perform a filesystem backup with dump(8)
bkup() {
  bkup_target="$1"
  shift

  if [ "${WRITE}" = 'yes' ]; then
    dump -auf - "$@" -- "${bkup_target}" > "${bkup_target}-$(date '+%F').dump"
  else
    dump -auf - "$@" -- "${bkup_target}"
  fi
}

# check to see that the appropriate number of arguments have been
# passed, and that the user is root.
prereqs() {
  readonly args_needed=1
  [ "$#" -ge "${args_needed}" ] || usage

  must_be_root
}

prereqs "$@"

while getopts w opt; do

  case "${opt}" in
    w) readonly WRITE='yes' ;;
    *) usage                ;;
  esac

done

shift $((OPTIND - 1))

echo 'Dumping...'

bkup "$@"
